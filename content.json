{"meta":{"title":"xll的个人网站","subtitle":"得之我幸，失之我命","description":"python、linux、shell、MySQL等技术的学习","author":"chenxl","url":"https://chenxl18.github.io","root":"/"},"pages":[{"title":"music","date":"2019-05-30T02:31:44.000Z","updated":"2019-05-30T02:31:44.556Z","comments":true,"path":"music/index.html","permalink":"https://chenxl18.github.io/music/index.html","excerpt":"","text":""}],"posts":[{"title":"MySQL的使用","slug":"MySQL的使用","date":"2019-05-28T13:16:29.000Z","updated":"2019-05-29T15:05:42.330Z","comments":true,"path":"2019/05/28/uncategorized/MySQL的使用/","link":"","permalink":"https://chenxl18.github.io/2019/05/28/uncategorized/MySQL的使用/","excerpt":"","text":"MySQL的使用技巧如果不知道pstree命令可以使用 yum provides pstree 12[root@mysql-2 ~]# yum provides pstree[root@mysql-2 ~]# yum install psmisc -y pstree命令：用来查看进程树 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263[root@mysql-2 ~]# pstree -p # 查看进程树结构，并且显示pid号systemd(1)─┬─NetworkManager(5474)─┬─&#123;NetworkManager&#125;(5518) │ └─&#123;NetworkManager&#125;(5521) ├─VGAuthService(5444) ├─auditd(5422)───&#123;auditd&#125;(5423) ├─chronyd(5457) ├─crond(5478) ├─dbus-daemon(5455) ├─irqbalance(5449) ├─login(5481)───bash(8235) ├─lvmetad(2799) ├─master(6082)─┬─pickup(15979) │ └─qmgr(6099) ├─mysqld_safe(5943)───mysqld(6034)─┬─&#123;mysqld&#125;(6848) │ ├─&#123;mysqld&#125;(6962) │ ├─&#123;mysqld&#125;(6963) │ ├─&#123;mysqld&#125;(6964) │ ├─&#123;mysqld&#125;(6965) │ ├─&#123;mysqld&#125;(6966) │ ├─&#123;mysqld&#125;(6967) │ ├─&#123;mysqld&#125;(6968) │ ├─&#123;mysqld&#125;(6969) │ ├─&#123;mysqld&#125;(6970) │ ├─&#123;mysqld&#125;(6971) │ ├─&#123;mysqld&#125;(6973) │ ├─&#123;mysqld&#125;(7453) │ ├─&#123;mysqld&#125;(7454) │ ├─&#123;mysqld&#125;(7455) │ ├─&#123;mysqld&#125;(7456) │ ├─&#123;mysqld&#125;(7457) │ ├─&#123;mysqld&#125;(7464) │ ├─&#123;mysqld&#125;(7465) │ ├─&#123;mysqld&#125;(7466) │ ├─&#123;mysqld&#125;(7467) │ ├─&#123;mysqld&#125;(7468) │ ├─&#123;mysqld&#125;(7469) │ ├─&#123;mysqld&#125;(7470) │ ├─&#123;mysqld&#125;(7690) │ ├─&#123;mysqld&#125;(7691) │ ├─&#123;mysqld&#125;(15744) │ ├─&#123;mysqld&#125;(15790) │ ├─&#123;mysqld&#125;(16005) │ ├─&#123;mysqld&#125;(16006) │ └─&#123;mysqld&#125;(16007) ├─polkitd(5447)─┬─&#123;polkitd&#125;(5458) │ ├─&#123;polkitd&#125;(5473) │ ├─&#123;polkitd&#125;(5503) │ ├─&#123;polkitd&#125;(5504) │ ├─&#123;polkitd&#125;(5505) │ └─&#123;polkitd&#125;(5506) ├─rsyslogd(5784)─┬─&#123;rsyslogd&#125;(5892) │ └─&#123;rsyslogd&#125;(5901) ├─sshd(5777)─┬─sshd(15703)───bash(15705)───mysql(15789) │ ├─sshd(15750)───bash(15752) │ └─sshd(15977)───bash(15980)───pstree(16054) ├─systemd-journal(2780) ├─systemd-logind(5475) ├─systemd-udevd(2807) ├─tuned(5779)─┬─&#123;tuned&#125;(7331) │ ├─&#123;tuned&#125;(7332) │ ├─&#123;tuned&#125;(7376) │ └─&#123;tuned&#125;(7593) └─vmtoolsd(5454)───&#123;vmtoolsd&#125;(5511) 查看MySQL的进程 12345[root@mysql-2 ~]# ps aux|grep mysqlroot 7321 0.0 0.0 11816 1620 ? S 3月10 0:00 /bin/sh /usr/local/mysql/bin/mysqld_safe --datadir=/data/mysql --pid-file=/data/mysql/mysql-2.pidmysql 7417 0.0 9.9 1571636 185360 ? Sl 3月10 0:16 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/data/mysql --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/var/log/mysql/mysql.log --pid-file=/data/mysql/mysql-2.pidroot 19744 0.0 0.0 112728 988 pts/2 S+ 10:10 0:00 grep --color=auto mysql[root@mysql-2 ~]# mysqld_safe和mysqld进程，他们之间的关系是什么？答：mysqld_safe是mysqld进程的父进程mysql数据库是一个进程里启动很多线程的程序。只要有人远程连接到mysqld进程，就会产生一个线程去接待。完成相关的数据库的操作。 进程里包含很多线程进程占用的资源多（内存、cpu等），线程占用的资源少，但是作用都差不多，都可以用来处理操作。1个进程里可以启用很多额线程。 当mysqld进程没有启动的时候，是不能连接到mysql数据库里的 1234[root@mysql-2 support-files]# mysql -uroot -p&apos;Sanchuang123#&apos;mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/tmp/mysql.sock&apos; (2)[root@mysql-2 support-files]# 连接mysql的2种方式：1.通过文件socket：同一台电脑里的不同的进程之间，可以使用文件socket来通信。 1234[root@mysql-2 support-files]# mysql -uroot -p&apos;Sanchuang123#&apos;mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/tmp/mysql.sock&apos; (2) --》说明文件socket 不存在[root@mysql-2 support-files]# -S 指定mysql的socket文件在路径 123456789101112131415[root@mysql-2 tmp]# mysql -S /tmp/mysql.sock -uroot -p&apos;Sanchuang123#&apos;mysql: [Warning] Using a password on the command line interface can be insecure.Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 4Server version: 5.7.25 Source distributionCopyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; 修改mysql的socket文件的路径my.cnf 的作用是当mysqld进程启动的时候，会读取my.cnf文件里的配置，然后加载运行，启动相应的功能。关于定制mysql的配置，有2个地方：1.在cmake编译的时候，指定配置 1234567[root@changsha-tianlong-db-2 mysql-5.7.25]# cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\ #mysql安装目录-DMYSQL_DATADIR=/data/mysql \\ #数据库文件目录-DSYSCONFDIR=/etc \\ #配置文件目录-DMYSQL_USER=mysql \\ #运行mysql进行的用户，如果没有需要提前添加用户和用户组-DDEFAULT_CHARSET=utf8 \\ #默认字符集-DDEFAULT_COLLATION=utf8_general_ci \\ #默认校对规则-DWITH_BOOST=boost #boost库，带boost的源码包只需要这样即可，不带boost源码包需要指明boost目录 2.在配置文件my.cnf里指定 123456789101112[root@mysql-2 tmp]# vim /etc/my.cnf[mysqld_safe]log-error=/var/log/mysql/mysql.log#这是指定mysql的日志文件的路径#指定mysqld_safe进程的配置#需要在mkdir /var/log/mysql 目录，然后使用命令chown mysql:mysql /var/log/mysql#因为mysql进程需要往/var/log/mysql目录里写东西，需要权限，不然不能往目录下写日志[mysqld]socket=/data/mysql/mysql.sock#指定mysqld的socket文件所在的路径，/data/mysql目录一定要先存在。#指定mysqld进程的配置 授权给mysql用户 1234[root@mysql-2 log]# cd /var/log[root@mysql-2 log]# mkdir mysql[root@mysql-2 log]# chown mysql:mysql mysql[root@mysql-2 log]# 重新启动mysqld服务 123456789[root@mysql-2 tmp]# service mysqld restart 重新启动mysqld服务Shutting down MySQL. SUCCESS! Starting MySQL. SUCCESS! [root@mysql-2 tmp]# ps aux|grep mysqlroot 22682 0.6 0.0 11812 1616 pts/1 S 10:57 0:00 /bin/sh /usr/local/mysql/bin/mysqld_safe --datadir=/data/mysql --pid-file=/data/mysql/mysql-2.pidmysql 22795 6.0 9.4 1571372 176028 pts/1 Sl 10:57 0:00 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/data/mysql --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/var/log/mysql/mysql.log --pid-file=/data/mysql/mysql-2.pid --socket=/data/mysql/mysql.sockroot 22831 0.0 0.0 112724 984 pts/1 S+ 10:57 0:00 grep --color=auto mysql[root@mysql-2 tmp]# 注释：–basedir=/usr/local/mysql #指定的mysql的安装路径–datadir=/data/mysql #数据存放的目录–plugin-dir=/usr/local/mysql/lib/plugin #插件的目录–user=mysql #使用mysql这个用户启动的–log-error=/var/log/mysql/mysql.log # 日志文件的路径–pid-file=/data/mysql/mysql-2.pid #mysql的进程的pid存放的文件，此文件是方便关闭mysql的时候，去kill 进程–socket=/data/mysql/mysql.sock #指定的socket文件的路径修改了socket文件的路径后，使用mysql命令连接到mysql数据库里，需要指定socket文件的路径 123456789[root@mysql-2 tmp]# ps aux|grep mysqlroot 22682 0.6 0.0 11812 1616 pts/1 S 10:57 0:00 /bin/sh /usr/local/mysql/bin/mysqld_safe --datadir=/data/mysql --pid-file=/data/mysql/mysql-2.pidmysql 22795 6.0 9.4 1571372 176028 pts/1 Sl 10:57 0:00 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/data/mysql --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=/var/log/mysql/mysql.log --pid-file=/data/mysql/mysql-2.pid --socket=/data/mysql/mysql.sockroot 22831 0.0 0.0 112724 984 pts/1 S+ 10:57 0:00 grep --color=auto mysql[root@mysql-2 tmp]# cat /data/mysql/mysql-2.pid 22795[root@mysql-2 tmp]# mysql -uroot -p&apos;Sanchuang123#&apos;mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/tmp/mysql.sock&apos; (2) ‘/tmp/mysql.sock’ (2) –》默认会到/tmp目录下查找使用-S 选项指定 1[root@mysql-2 tmp]# mysql -S /data/mysql/mysql.sock -uroot -p&apos;Sanchuang123#&apos; #指定mysqld的socket文件所在的路径，/data/mysql目录一定要先存在。2.通过网络socketip:port 192.168.0.133:3306 –&gt;网络socket可以实现不同的计算机之间的进程之间的通信。 可以通过-h 192.168.0.133 指定访问的数据库服务器的ip地址，使用网络socket的方式访问-h host 123456789101112131415[root@mysql-2 mysql]# mysql -h 192.168.0.133 -uroot -p&apos;Sanchuang123#&apos;mysql: [Warning] Using a password on the command line interface can be insecure.Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 12Server version: 5.7.25 Source distributionCopyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; 什么是socket？网络上的两个程序通过一个双向的通信连接实现数据的交换，这个连接的一端称为一个socket。Socket的英文原义是“孔”或“插座”。作为BSD UNIX的进程通信机制，取后一种意思。通常也称作”套接字”，用于描述IP地址和端口，是一个通信链的句柄，可以用来实现不同虚拟机或不同计算机之间的通信。 socket 可以实现不同的进程之间的通信，是不同进程之间通信的一种方式。 12345678910111213141516[root@mysql-2 support-files]# yum install net-tools -y 安装net-tools工具得到netstat命令[root@mysql-2 support-files]# netstat -anplutActive Internet connections (servers and established)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 12290/nginx: master tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 6561/sshd tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 6861/master tcp 0 0 192.168.0.133:22 192.168.0.188:51832 ESTABLISHED 19720/sshd: root@pt tcp 0 0 192.168.0.133:22 192.168.0.188:51853 ESTABLISHED 19806/sshd: root@pt tcp 0 52 192.168.0.133:22 192.168.0.188:50459 ESTABLISHED 18112/sshd: root@pt tcp6 0 0 :::80 :::* LISTEN 12290/nginx: master tcp6 0 0 :::22 :::* LISTEN 6561/sshd tcp6 0 0 ::1:25 :::* LISTEN 6861/master udp 0 0 127.0.0.1:323 0.0.0.0:* 6270/chronyd udp6 0 0 ::1:323 :::* 6270/chronyd [root@mysql-2 support-files]# 注释：0.0.0.0:80 —–&gt;0.0.0.0表达这台本机上所有的IP地址 网络socket的使用 使用SQLyog远程连接到MySQL 1.授权一个用户能远程登录 1234mysql&gt; grant ALL on *.* to &apos;cali&apos;@&apos;%&apos; identified by &apos;Sanchuang123#&apos;;Query OK, 0 rows affected, 1 warning (0.00 sec)mysql&gt; 授权cali这个用户可以从任何机器上远程连接过来，使用密码Sanchuang123# 可以对mysql数据库的所有的数据库进行操作。 使用SQLyog远程连接 MySQL里破解密码 第1步：停止MySQL进程的运行 123[root@mysql-2 mysql]# service mysqld stopShutting down MySQL.. SUCCESS! [root@mysql-2 mysql]# 第2步：修改配置文件 1234[root@mysql mysql]# vim /etc/my.cnfuser=mysql #指定启动MySQL进程的用户skip-grant-tables #跳过密码验证#validate-password=off #需要禁用密码复杂性策略 第3步：启动MySQL进程 12[root@mysql mysql]# service mysqld start 启动MySQL进程Starting MySQL. SUCCESS! 第4步：登录MySQL，不接密码 1234567891011121314151617181920212223242526[root@mysql-2 mysql]# mysql -S /data/mysql/mysql.sock -uroot -pEnter password: Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 2Server version: 5.7.25 Source distributionCopyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; set password=&apos;123456&apos;; ----》会报错ERROR 1290 (HY000): The MySQL server is running with the --skip-grant-tables option so it cannot execute this statementmysql&gt; flush privileges; ----》刷新权限（会加载原来没有加载的权限表）Query OK, 0 rows affected (0.01 sec)mysql&gt; set password=&apos;Sanchuang1234#&apos;; ----》会报错ERROR 1133 (42000): Can&apos;t find any matching row in the user tablemysql&gt; set password for &apos;root&apos;@&apos;localhost&apos; = &apos;Sanchuang1234#&apos;; ----》修改密码Query OK, 0 rows affected (0.00 sec)mysql&gt; quitBye 第5步：重新修改mysql的配置文件 1234[mysqld]socket=/data/mysql/mysql.sock#user=mysql --》注释掉#skip-grant-tables --》注释掉 *第6步：刷新服务 * 1234[root@mysql-2 mysql]# service mysqld restart #重新刷新服务Shutting down MySQL.. SUCCESS! Starting MySQL. SUCCESS! [root@mysql-2 mysql]# 第7步：验证修改密码是否成功 1[root@mysql-2 mysql]# mysql -S /data/mysql/mysql.sock -uroot -p&apos;Sanchuang1234#&apos; my.cnf配置文件部分配置使用介绍 12345678910111213[mysqld]port = 3309 #修改端口号max_connections = 330 #最大并发连接数 ，增大该值需要相应增加允许打开的文件描述符数 max_connect_errors = 100 #如果某个用户发起的连接error超过该数值，则该用户的下次连接将被阻塞，open_files_limit = 8192 #设置打开文件的句柄数量，在系统里面可以用ulimit –a 查看，可以使用ulimit -n 65535修改，同时添加到/etc/rc.local里innodb_buffer_pool_size = 1G #指定innodb存储引擎的缓冲池的大小。--》从内存当前拿出多少空间来做缓存使用[mysql] ----&gt;专门针对mysql这个命令的配置auto-rehash #可以在命令可以使用tab键补齐prompt=\\\\u@\\\\d \\\\R:\\\\m mysql&gt; #在Mysql命令显示用户名和数据库名字、时间[mysqld_safe]log-error=/var/log/mysql/mysql.log 基本的MySQL的操作查看MySQL数据库系统里有哪些库 123456789101112[root@mysql-2 mysql]# mysql -uroot -p&apos;Sanchuang1234#&apos; -S /data/mysql/mysql.sockmysql&gt; show databases; #查看MySQL数据库系统里有哪些库+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || sys |+--------------------+4 rows in set (0.01 sec) 创建lizengzhi数据库 1234567891011121314mysql&gt; create database lizengzhi ; #创建lizengzhi数据库Query OK, 1 row affected (0.00 sec)mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || lizengzhi || mysql || performance_schema || sys |+--------------------+5 rows in set (0.00 sec) 切换当前使用的数据库到lizengzhi 123456789mysql&gt; use lizengzhi; #切换当前使用的数据库到lizengzhiDatabase changedmysql&gt; select database(); #查询当前在哪个数据库里+------------+| database() |+------------+| lizengzhi |+------------+1 row in set (0.00 sec) linux内核对一个进程可以打开多少个文件进行了限制，默认情况下一个进程只能打开1024个文件 文件描述符：进程对打开的文件进行编号，这个编号就是文件描述符。 12345[root@mysql-2 mysql]# ulimit -aopen files (-n) 1024 #打开的文件数量[root@mysql-2 mysql]# ulimit -n 655350 #临时修改一个进程可以打开的文件数量[root@mysql-2 mysql]# ulimit -n 1000000[root@mysql-2 mysql]# 查看mysql里默认的最大并发数是多少 1234567root@(none) 15:37 mysql&gt;show variables like &apos;max_connections&apos;; #查看max_connections这个变量+-----------------+-------+| Variable_name | Value |+-----------------+-------+| max_connections | 151 |+-----------------+-------+1 row in set (0.01 sec) 看当前mysql里的所有的变量 1root@(none) 15:39 mysql&gt;show variables ; #查看当前mysql里的所有的变量 查看mysql的端口号 1234567root@(none) 15:39 mysql&gt;show variables like &apos;port&apos;;+---------------+-------+| Variable_name | Value |+---------------+-------+| port | 3309 |+---------------+-------+1 row in set (0.05 sec) 查看打开文件的最大数 1234567root@(none) 15:42 mysql&gt;show variables like &apos;open%&apos;;+------------------+-------+| Variable_name | Value |+------------------+-------+| open_files_limit | 5000 |+------------------+-------+1 row in set (0.00 sec) 查看内存的使用情况 1234[root@mysql-2 boot]# free -m #查看内存的使用情况（以M为单位显示大小） total used free shared buff/cache availableMem: 1819 369 210 9 1240 1210Swap: 2047 0 2047 查看mysql缓冲池大小 1234567root@(none) 15:42 mysql&gt;show variables like &apos;innodb_buffer_pool_size&apos;;+-------------------------+-----------+| Variable_name | Value |+-------------------------+-----------+| innodb_buffer_pool_size | 134217728 |+-------------------------+-----------+1 row in set (0.00 sec) 如何让linux系统开机执行 ulimit -n 655350 ？答案： 将这条命令写入/etc/rc.local文件 123[root@mysql-2 boot]# vim /etc/rc.local ulimit -n 655350 --》在文件的末尾添加[root@mysql-2 boot]# chmod +x /etc/rc.d/rc.local #需要授予可执行权限，不然不会生效 如果今后有需要开机执行某个命令的需求，建议将命令放到/etc/rc.local里 mysqld服务启动不起来？如何排除? 123[root@mysql-2 boot]# service mysqld restartShutting down MySQL.... SUCCESS! Starting MySQL... ERROR! The server quit without updating PID file (/data/mysql/mysql-2.pid). 排错主要看错误提醒和日志文件 1[root@mysql-2 boot]# cat /var/log/mysql/mysql.log 2019-03-11T08:18:43.399355Z 0 [ERROR] unknown option ‘–auto-rehash’ –》不知道的选项，只有配置文件里有选项–》配置文件里的配置有问题2019-03-11T08:18:43.399445Z 0 [ERROR] Aborting [ERROR] 错误信息 –》非常重视[Note] 普通的信息 1234567891011[mysqld]socket=/data/mysql/mysql.sockport = 3309open_files_limit = 8192innodb_buffer_pool_size = 256Mauto-rehash ##存放的位置不对prompt=\\\\u@\\\\d \\\\R:\\\\m mysql&gt; #存放的位置不对#user=mysql#skip-grant-tables#指定mysqld的socket文件所在的路径，/data/mysql目录一定要先存在。#指定mysqld进程的配置 修改配置文件 123[mysql] ---》是在mysql进程里的配置，不是mysqld进程的配置auto-rehashprompt=\\\\u@\\\\d \\\\R:\\\\m mysql&gt; 修改了配置文件，一定要刷新服务 12[root@mysql-2 boot]# service mysqld startStarting MySQL. SUCCESS! 使用SQLyog来建表建库，认识表和库是什么？库里存放表，表里存放一条一条的信息","categories":[],"tags":[]},{"title":"MySQL的各种安装方式","slug":"MySQL的各种安装方式","date":"2019-05-28T03:04:45.000Z","updated":"2019-05-29T15:03:53.732Z","comments":true,"path":"2019/05/28/MySQL的学习笔记/MySQL的各种安装方式/","link":"","permalink":"https://chenxl18.github.io/2019/05/28/MySQL的学习笔记/MySQL的各种安装方式/","excerpt":"","text":"MySQL是什么？ 123456MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品。MySQL是一个软件，用来存放数据。用它来存放数据，特别方便，查找和存储数据都非常方便。MySQL 是一个中小型数据库。MySQL是开源数据库。不是免费的数据库软件。有开源版本的数据库，这个是不要钱。MySQL 的开源版本不要钱。企业版都是需要购买。 哪些地方需要使用数据库？ 12银行、股市、学校、公交车、小区、游戏、网站、快递、导航、税务等只要和钱有关的地方就有数据库 安装MySQL安装linux系统centos7 1810.iso数据库服务器是公司的核心服务器–&gt;配置必须要 下载MySQL软件官方网站https://www.mysql.com/The world’s most popular open source database。世界上最流行的开源数据库。Oracle MySQL Cloud Service (commercial) 云服务器版本MySQL Enterprise Edition (commercial) 企业版MySQL Cluster CGE (commercial) 集群版本MySQL Community Edition (GPL) 社区版 –》免费 MySQL的版本：8版本–》 8.0.155版本–》 5.7MySQL Community Server 5.7.25 安装rpm包方式安装500M–》linux系统里 1[root@localhost ~]# yum install lrzsz -y #解决传输文件的问题 windows--》linux传文件 安装步骤 解压安装包1[root@localhost ~]# tar xf mysql-5.7.25-1.el7.x86_64.rpm-bundle.tar 安装1[root@localhost ~]# yum install mysql-community-* mysql-community-server 是MySQL提供服务功能的软件包mysql-community-client 客户端管理需要的工具mysql-community-libs 库文件 librarymysql-community-devel 开发工具和接口程序 developmentmysql-community-test 测试环境软件mysql-community-embedded 嵌入式相关的软件 启动MySQL程序​ 12[root@localhost ~]# service mysqld startRedirecting to /bin/systemctl start mysqld.service mysql daemon 守护进程 –》mysqld守护进程：这个程序是一直运行的，不是运行一下，马上就关闭。因为有人会随时来访问，都可以访问这个进程。 12345[root@localhost ~]# service mysqld status #参看mysql的状态[root@localhost ~]# ps aux|grep mysqld #查看mysqld的进程是否存在mysql 27129 0.3 4.8 1119708 185728 ? Sl 15:13 0:01 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pidroot 27172 0.0 0.0 112724 984 pts/0 S+ 15:19 0:00 grep --color=auto mysqld[root@localhost ~]# mysql会开发3306端口 使用lsof命令查看端口号是否被占用 12345[root@localhost ~]# yum install lsof -y[root@localhost ~]# lsof -i:3306COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEmysqld 27129 mysql 22u IPv6 76271 0t0 TCP *:mysql (LISTEN)[root@localhost ~]# 如何知道本机里开发了哪些端口？ 1234567891011121314[root@localhost ~]# netstat -anplutActive Internet connections (servers and established)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 6085/sshd tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 6307/master tcp 0 0 192.168.0.37:22 192.168.0.11:57980 ESTABLISHED 14958/sshd: root@pt tcp 0 0 192.168.0.37:22 192.168.0.11:50402 ESTABLISHED 15518/sshd: root@pt tcp 0 52 192.168.0.37:22 192.168.0.11:53222 ESTABLISHED 15890/sshd: root@pt tcp6 0 0 :::3306 :::* LISTEN 15798/mysqld tcp6 0 0 :::22 :::* LISTEN 6085/sshd tcp6 0 0 ::1:25 :::* LISTEN 6307/master udp 0 0 0.0.0.0:68 0.0.0.0:* 15443/dhclient udp 0 0 127.0.0.1:323 0.0.0.0:* 5501/chronyd udp6 0 0 ::1:323 :::* 5501/chronyd ip：端口号 –》网络socket 槽0.0.0.0 本机上任意的ip地址。127.0.0.1 本地的回环测试接口，只能本机自己访问，别的机器不能访问:::3306 本机上任意的ip地址上开启3306端口 –》ipv6 查看别的机器开启了哪些端口？扫描工具nmap 1234567891011[root@localhost ~]# yum install nmap -y #安装nmap软件[root@localhost ~]# nmap 192.168.0.37Starting Nmap 6.40 ( http://nmap.org ) at 2019-05-06 16:39 CSTNmap scan report for 192.168.0.37Host is up (0.000014s latency).Not shown: 998 closed portsPORT STATE SERVICE22/tcp open ssh3306/tcp open mysqlNmap done: 1 IP address (1 host up) scanned in 0.30 seconds 登录MySQL服务器mysql命令是用来登录mysql服务器的客户端工具 1234[root@localhost ~]# mysql -u root -pEnter password:ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;localhost&apos; (using password: NO)[root@localhost ~]# 使用密码登录MySQL数据库 1[root@localhost log]# mysql -uroot -p&apos;Sanchuang123xl#&apos; 解释-uroot 指定登录mysql的用户是root user-p’Sanchuang123xl#’ 指定登录的密码 password需要去查看日志，得到临时密码 1234567[root@localhost log]# cd /var/logmysqld.log mysql的日志文件[root@localhost log]# cat mysqld.log |grep &quot;tem&quot;2019-05-06T07:51:53.607329Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.2019-05-06T07:51:53.630880Z 1 [Note] A temporary password is generated for root@localhost: =%rIObuds8p&amp;2019-05-06T07:51:57.783188Z 0 [Note] InnoDB: Creating shared tablespace for temporary tables[root@localhost log]# =%rIObuds8p&amp; 是MySQL的临时密码 使用临时密码登录mysql服务器 12345678910111213141516[root@localhost lianxi]# mysql -u root -p&apos;=%rIObuds8p&amp;&apos;mysql: [Warning] Using a password on the command line interface can be insecure.Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 3Server version: 5.7.26Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; 重新设置密码第一种方法： 12mysql&gt; set password=&apos;Root123#&apos;;Query OK, 0 rows affected (0.01 sec) 第二种方法： 1mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified by &apos;Root123#&apos;; 显示查看mysql里有多少个数据库 12345678910mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || sys |+--------------------+4 rows in set (0.01 sec) 退出MySQL1mysql&gt; exit mysql服务安装好后，会自动设置开机启动 如何查看本机里哪些服务是开机启动的？ 123456789[root@localhost ~]# systemctl list-unit-files #查看本机开机的时候，哪些服务是启动的disabled #不启动enabled #启动[root@localhost ~]# systemctl disable firewalld #禁用firewalld服务，开机不启动[root@localhost ~]# systemctl enable firewalld #开机启动firewalld服务[root@localhost ~]# systemctl list-unit-files|grep &quot;mysqld&quot;mysqld.service enabled #表示mysql是开机启动mysqld@.service disabled[root@localhost ~]# windows的客户端远程连接linux里的mysql的软件 1.SQLyog –》第3方公司产品 2.workbench –》mysql官方自己出品关闭防火墙软件 12[root@localhost ~]# service firewalld stop Redirecting to /bin/systemctl stop firewalld.service 查看防火墙规则 12345678910[root@localhost ~]# iptables -L Chain INPUT (policy ACCEPT)target prot opt source destination Chain FORWARD (policy ACCEPT)target prot opt source destination Chain OUTPUT (policy ACCEPT)target prot opt source destination [root@localhost ~]# 使用SQLyog第1次远程连接的时候，会出现不允许连接，是因为mysql为了安全的考虑，不允许远程登录如果需要远程登录，就需要考虑去授权一个用户能远程登录到mysql，如何授权？ 授权root用户使用密码远程登录1234[root@localhost ~]# mysql -uroot -p&apos;Root123#&apos; mysql&gt; grant ALL on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;Sanchuang123xl#&apos;; 授权root用户可以从任何机器登录到mysql服务器上使用的密码是Sanchuang123xl#Query OK, 0 rows affected, 1 warning (0.05 sec) grant 是数据库里的授权命令ALL 是所有的权限（select、update、delete、insert等）On . 在所有的库所有的表上 mysql.user 表示mysql数据库里的user表‘root’@’%’ 这表示一个用户名是root可以从任何地方登录identified by ‘Sanchuang123#’ 指定密码为Sanchuang123# 源码编译安装—&gt;企业里使用最多方式1.可以开启很多功能2.可以指定安装路径 –》最大的好处因为MySQL需要存放数据，需要大量的磁盘空间，企业里会单独给MySQL一个存放数据的地方。 需要一台干净的linux系统修改主机名为MySQL2临时修改主机名 123[root@localhost ~]# hostname mysql-2 [root@localhost ~]# su - root 切换用户到root上一次登录：五 3月 8 09:56:29 CST 2019从 192.168.0.188pts/0 上 永久修改主机名 1234[root@mysql-2 ~]# vi /etc/hostname [root@mysql-2 ~]# vi /etc/hostname [root@mysql-2 ~]# cat /etc/hostname mysql-2 需要mysql的源码包上传源码包到linux系统mysql-boost-5.7.25.tar和mysql-5.7.25.tar.gz的差异percona-xtrabackup、json等软件需要使用boost库，如果你安装的MySQL需要对很多软件进行支持，建议安装ysql-boost-5.7.25.tar 12[root@changsha-tianlong-db-2 ~]# yum install lrzsz -y[root@changsha-tianlong-db-2 ~]# rz 查看官方的安装文档https://dev.mysql.com/doc/refman/5.7/en/source-installation.html也可以百度 mysql 5.7.25编译安装https://www.jianshu.com/p/90769a797b88 解压1[root@changsha-tianlong-db-2 ~]# tar xf mysql-boost-5.7.25.tar.gz cmake 是一个编译工具和 gcc一样 安装依赖关系包1[root@changsha-tianlong-db-2 mysql-5.7.25]# yum install cmake ncurses-devel gcc gcc-c++ -y #安装依赖关系包 创建用户和组1[root@changsha-tianlong-db-2 network-scripts]# useradd -r -s /sbin/nologin mysql -r 创建系统用户（不会创建家目录），一般会修改shell为/sbin/nologin-M 创建用户不建立家目录 123[root@changsha-tianlong-db-2 network-scripts]# id mysqluid=997(mysql) gid=995(mysql) 组=995(mysql)[root@changsha-tianlong-db-2 network-scripts]# 进入解压后的目录，开始编译前的配置12345678910[root@changsha-tianlong-db-2 ~]# cd mysql-5.7.25/[root@changsha-tianlong-db-2 mysql-5.7.25]#[root@changsha-tianlong-db-2 mysql-5.7.25]# mkdir /data/mysql -p[root@changsha-tianlong-db-2 mysql-5.7.25]#cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\-DMYSQL_DATADIR=/data/mysql \\-DSYSCONFDIR=/etc \\-DMYSQL_USER=mysql \\-DDEFAULT_CHARSET=utf8 \\-DDEFAULT_COLLATION=utf8_general_ci \\-DWITH_BOOST=boost 对上面的命令进行说明：[root@changsha-tianlong-db-2 mysql-5.7.25]# cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \\ #mysql安装目录-DMYSQL_DATADIR=/data/mysql \\ #数据库文件目录-DSYSCONFDIR=/etc \\ #配置文件目录-DMYSQL_USER=mysql \\ #运行mysql进行的用户，如果没有需要提前添加用户和用户组-DDEFAULT_CHARSET=utf8 \\ #默认字符集-DDEFAULT_COLLATION=utf8_general_ci \\ #默认校对规则-DWITH_BOOST=boost #boost库，带boost的源码包只需要这样即可，不带boost源码包需要指明boost目录 编译和编译安装12[root@changsha-tianlong-db-2 mysql-5.7.25]# make -j 2 #启用多进程去编译 -j 2 启用2个进程同时进行，目的是为了加快速度[root@changsha-tianlong-db-2 mysql-5.7.25]#make install #安装 启动MySQL12345[root@changsha-tianlong-db-2 mysql-5.7.25]# cd /usr/local/mysql/ 进入安装目录[root@changsha-tianlong-db-2 mysql]# lsbin COPYING-test include man README shareCOPYING docs lib mysql-test README-test support-files[root@changsha-tianlong-db-2 mysql]# 对mysql的配置文件进行备份 123[root@changsha-tianlong-db-2 mysql]# cp /etc/my.cnf /root #备份[root@changsha-tianlong-db-2 mysql]# &gt;/etc/my.cnf #清空，因为这个文件是mariadb的[root@changsha-tianlong-db-2 bin]# pwd /usr/local/mysql/bin –》存放可执行文件的目录初始化MySQL 1[root@changsha-tianlong-db-2 bin]# ./mysqld --initialize --user=mysql --basedir=/usr/local/mysql/ --datadir=/data/mysql 复制mysql客户端命令到PATH变量路径里，方便后面使用 1[root@changsha-tianlong-db-2 bin]# cp mysql /usr/bin/ 配置能使用service 方式启动mysql，因为需要一个启动脚本，这个脚本mysql官方给我们提供了，直接复制过去就ok了 12345678[root@changsha-tianlong-db-2 mysql]# cp support-files/mysql.server /etc/init.d/mysqld[root@changsha-tianlong-db-2 mysql]# service mysqld startStarting MySQL.Logging to &apos;/data/mysql/changsha-tianlong-db-2.err&apos;.SUCCESS! [root@changsha-tianlong-db-2 mysql]# service mysqld restartShutting down MySQL.. SUCCESS! Starting MySQL. SUCCESS! [root@changsha-tianlong-db-2 mysql]# 登录mysql，使用临时密码 123456789101112131415[root@changsha-tianlong-db-2 mysql]# mysql -uroot -p&apos;drNo5dIR?OXN&apos;mysql: [Warning] Using a password on the command line interface can be insecure.Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 2Server version: 5.7.25Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; 修改密码 123456mysql&gt; set password=&apos;Sanchuang123#&apos;; #修改密码Query OK, 0 rows affected (0.00 sec)mysql&gt; exitBye[root@changsha-tianlong-db-2 mysql]# 退出验证密码是否修改成功 1234567891011121314151617[root@changsha-tianlong-db-2 mysql]# mysql -uroot -p&apos;Sanchuang123#&apos;mysql: [Warning] Using a password on the command line interface can be insecure.Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 4Server version: 5.7.25 Source distributionCopyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; mysql&gt; quit 退出Bye 安装完后的工作：数据库服务器一般不启用防火墙，主要是考虑性能的问题。会在数据库服务器的前面加一个防火墙。 关闭防火墙firewalld，并且设置开机不要启动。123456789101112131415[root@changsha-tianlong-db-2 mysql]# service firewalld stop 关闭firewalld服务Redirecting to /bin/systemctl stop firewalld.service[root@changsha-tianlong-db-2 mysql]# systemctl disable firewalld 禁止开机启动Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.[root@changsha-tianlong-db-2 mysql]# iptables -L 查看防火墙规则Chain INPUT (policy ACCEPT)target prot opt source destination Chain FORWARD (policy ACCEPT)target prot opt source destination Chain OUTPUT (policy ACCEPT)target prot opt source destination [root@changsha-tianlong-db-2 mysql]# 关闭selinux1234567[root@changsha-tianlong-db-2 mysql]# getenforce Enforcing[root@changsha-tianlong-db-2 mysql]# setenforce 0 #临时关闭selinux[root@changsha-tianlong-db-2 mysql]# getenforce Permissive[root@changsha-tianlong-db-2 mysql]# vi /etc/selinux/config [root@changsha-tianlong-db-2 mysql]# cat /etc/selinux/config 考虑设置mysql服务开机启动123456789101112131415[root@changsha-tianlong-db-2 mysql]# systemctl enable mysqld #使用新式方式设置开机启动，提醒不能使用，建议我们使用老式的chkconfig方式mysqld.service is not a native service, redirecting to /sbin/chkconfig.Executing /sbin/chkconfig mysqld on[root@changsha-tianlong-db-2 mysql]# chkconfig mysqld on 设#置mysqld服务开机启动[root@changsha-tianlong-db-2 mysql]#[root@changsha-tianlong-db-2 mysql]#[root@changsha-tianlong-db-2 mysql]# chkconfig --list 注：该输出结果只显示 SysV 服务，并不包含原生 systemd 服务。SysV 配置数据可能被原生 systemd 配置覆盖。 要列出 systemd 服务，请执行 &apos;systemctl list-unit-files&apos;。查看在具体 target 启用的服务请执行&apos;systemctl list-dependencies [target]&apos;。mysqld 0:关 1:关 2:开 3:开 4:开 5:开 6:关netconsole 0:关 1:关 2:关 3:关 4:关 5:关 6:关network 0:关 1:关 2:开 3:开 4:开 5:开 6:关[root@changsha-tianlong-db-2 mysql]# 重新启动服务器reboot 重启—-init 6poweroff关机进入linux系统 12345678[root@mysql-2 ~]# lsof -i:3306COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEmysqld 6788 mysql 27u IPv6 37709 0t0 TCP *:mysql (LISTEN)[root@mysql-2 ~]# ps aux|grep mysqldroot 6619 0.0 0.0 115436 1732 ? S 15:43 0:00 /bin/sh /usr/local/mysql/bin/mysqld_safe --datadir=/data/mysql --pid-file=/data/mysql/mysql-2.pidmysql 6788 1.7 9.4 1571372 176096 ? Sl 15:43 0:01 /usr/local/mysql/bin/mysqld --basedir=/usr/local/mysql --datadir=/data/mysql --plugin-dir=/usr/local/mysql/lib/plugin --user=mysql --log-error=mysql-2.err --pid-file=/data/mysql/mysql-2.pidroot 7249 0.0 0.0 112724 984 pts/0 S+ 15:44 0:00 grep --color=auto mysqld[root@mysql-2 ~]# 说明mysql真得是开机启动了 使用SQLyog远程连接到MySQL授权一个用户能远程登录1234mysql&gt; grant all on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;Sanchuang123#&apos;;Query OK, 0 rows affected, 1 warning (0.02 sec)mysql&gt; 使用SQLyog远程连接注：编译安装mysql的时候，建议内存给大些，给4G，cpu给2个核就可以了服务器一般都是固定IP编译安装：1.编译前的配置（如果编译器是gcc）,主要是用来生成MakeFile文件–》就是编译的时候的配置文件例如：安装到什么位置，哪些功能开，哪些不开？yum install pcre-devel zlib-devel gcc gcc-c++./configure –prefix=/usr/local/nginx2.make 编译 ，根据MakeFile文件进行编译，将源代码编译成二进制文件3.make install 编译安装，其实就是将编译好的二进制文件复制到安装目录去。 yum安装-不建议使用1yum install MySQL -y poweroff 是关机的命令reboot 重新启动init 6 重新启动 需要2台虚拟机–》克隆 centos7里默认的数据库是Mariadb不是mysql mariadb是MySQL的分支 MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。在存储引擎方面，使用XtraDB（英语：XtraDB）来代替MySQL的InnoDB。 MariaDB由MySQL的创始人Michael Widenius（英语：Michael Widenius）主导开发，他早前曾以10亿美元的价格，将自己创建的公司MySQL AB卖给了SUN，此后，随着SUN被甲骨文收购，MySQL的所有权也落入Oracle的手中。MariaDB名称来自Michael Widenius的女儿Maria的名字。 数据库排名https://db-engines.com/en/ranking 购买mysql的规矩：一台电脑只能安装一套软件。 根据电脑里的cpu的颗数，颗数越多价格越高","categories":[{"name":"MySQL的学习笔记","slug":"MySQL的学习笔记","permalink":"https://chenxl18.github.io/categories/MySQL的学习笔记/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://chenxl18.github.io/tags/MySQL/"},{"name":"安装","slug":"安装","permalink":"https://chenxl18.github.io/tags/安装/"}]}]}